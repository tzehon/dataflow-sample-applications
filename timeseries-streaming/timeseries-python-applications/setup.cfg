#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
[tox:tox]
envlist = yapf-check, yapf, lint
toxworkdir = {toxinidir}/target/{env:ENV_NAME:.tox}

# Configuration applicable to all tox environments.
[testenv]
commands_pre =
  python --version
  pip --version
  # TODO: Reenable pip check after dependency conflicts are resolved.
  # pip check

# Don't warn that these commands aren't installed.
whitelist_externals =
  echo

# Autoformatter (yet-another-python-formatter) configuration
[yapf]
indent_width = 4
continuation_indent_width = 8
column_limit = 80
allow_split_before_dict_value = False
blank_line_before_module_docstring = True
coalesce_brackets = True
each_dict_entry_on_separate_line = True
split_all_top_level_comma_separated_values = True
split_arguments_when_comma_terminated = True
split_before_expression_after_opening_paren = True
split_before_first_argument = True
split_before_logical_operator = False

# Run autoformatter in dry-run mode.
[testenv:yapf-check]
deps =
  yapf
commands =
  yapf --diff --recursive MLPipeline/timeseries, MLPipelineExamples/sin_wave_example
skip_install = True

[testenv:yapf]
deps =
  yapf
commands =
  yapf --parallel --recursive --in-place MLPipeline/timeseries, MLPipelineExamples/sin_wave_example
skip_install = True

[testenv:lint]
deps =
    flake8
    pylint

commands =
  echo "Running pylint..."
  pylint MLPipeline/timeseries
  echo "Running flake8..."
  flake8 MLPipeline/timeseries --show-source --statistics
